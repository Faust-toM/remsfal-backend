name: "test-sync"

on:
  push:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  attestations: write
  id-token: write
  packages: write
  pull-requests: write


jobs:
  jdk17-build-and-push-to-registry:
    name: "JDK 17 Build and push image to registry"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven
      - name: Build with Maven (uber-jar)
        run: mvn --batch-mode --update-snapshots package -DskipTests
      
      - name: Copy OpenAPI Specs
        run: |
          mkdir export
          cp remsfal-services/remsfal-chat/target/openapi/* export/
          cp remsfal-services/remsfal-notification/target/openapi/* export/
          cp remsfal-services/remsfal-platform/target/openapi/* export/

      - name: Clone target frontend repo
        env:
          TOKEN: ${{ secrets.PAT }}
        run: |
          COMMIT_HASH=$(git rev-parse --short HEAD)
          BRANCH="feature/sync-OpenAPI-spec-${COMMIT_HASH}"
          echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV
          
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@users.noreply.github.com"

          git clone https://x-access-token:${TOKEN}@github.com/Faust-toM/remsfal-frontend.git
          cd remsfal-frontend

          git checkout -b $BRANCH || git checkout $BRANCH
          mkdir -p frontend/src/helper/api/
          cp -r ../export/* frontend/src/helper/api/

          git add frontend/src/helper/api/
          git commit -m "Update generated files from source repo" || echo "No changes to commit"
          git push origin sync-from-source

      - name: Create / Replace Pull Request
        env:
          TOKEN: ${{ secrets.PAT }}
        run: |
           gh pr create \
             --base main \
             --head "$BRANCH_NAME" \
             --title "Sync of OpenAPI Spec" \
             --body "This PR carries the new OpenAPISpec from remsfal-backend."


